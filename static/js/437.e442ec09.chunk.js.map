{"version":3,"file":"static/js/437.e442ec09.chunk.js","mappings":"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","sources":["components/buttons/FilledButton.tsx","components/buttons/TextIconButton.tsx","utils/consts.ts","hooks/useContract.js","components/dialogs/CustomDialog.tsx","components/dialogs/LoadingDialog.tsx","pages/Home.tsx"],"sourcesContent":["import { Button } from \"@material-tailwind/react\";\r\n\r\nexport default function FilledButton({\r\n  className = \"\",\r\n  children,\r\n  ...others\r\n}: IPropsOfComponent) {\r\n  return (\r\n    <Button\r\n      variant=\"filled\"\r\n      className={`rounded-md normal-case text-sm font-normal shadow-none hover:shadow-none px-4 py-2 bg-[#00bcd433] ${className}`}\r\n      {...others}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n}\r\n","import { IconButton } from '@material-tailwind/react'\r\n\r\nexport default function TextIconButton({ className = '', children, ...others }: IPropsOfComponent) {\r\n  return (\r\n    <IconButton\r\n      variant=\"text\"\r\n      className={`w-8 h-8 p-0 text-white hover:bg-gray-100 hover:bg-opacity-10 active:bg-gray-100 active:bg-opacity-10 ${className}`}\r\n      {...others}\r\n    >\r\n      {children}\r\n    </IconButton>\r\n  )\r\n}","export const TOKENS: Array<IToken> = [\r\n    {\r\n        id: \"BNB\",\r\n        name: \"BNB\",\r\n        image: \"https://s2.coinmarketcap.com/static/img/coins/64x64/1839.png\",\r\n        address: \"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\"\r\n    },\r\n    {\r\n        id: \"USDT\",\r\n        name: \"Tether USD\",\r\n        image: \"\thttps://etherscan.io/token/images/tethernew_32.png\",\r\n        address: \"0x55d398326f99059ff775485246999027b3197955\",\r\n    },\r\n    {\r\n        id: \"DAI\",\r\n        name: \"DAI\",\r\n        image: \"https://s2.coinmarketcap.com/static/img/coins/64x64/4943.png\",\r\n        address: \"0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3\",\r\n    },\r\n    {\r\n        id: \"USDC\",\r\n        name: \"USDC\",\r\n        image: \"https://s2.coinmarketcap.com/static/img/coins/64x64/3408.png\",\r\n        address: \"0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d\",\r\n    },\r\n    {\r\n        id: \"WBTC\",\r\n        name: \"Wrapped Bitcoin\",\r\n        image: \"https://s2.coinmarketcap.com/static/img/coins/64x64/3717.png\",\r\n        address: \"0x55f5af28075f37E6E02d0C741e268e462215CA33\",\r\n    },\r\n    {\r\n        id: \"TUSD\",\r\n        name: \"TrueUSD\",\r\n        address: \"0x40af3827F39D0EAcBF4A168f8D4ee67c121D11c9\",\r\n        image:\r\n            \"https://cdn.sushi.com/image/upload/f_auto,c_limit,w_96,q_auto/tokens/1/0x0000000000085d4780b73119b644ae5ecd22b376.jpg\",\r\n    },\r\n    {\r\n        id: \"TGP\",\r\n        name: \"The ghost pirate\",\r\n        address: \"0xf27d3ac8E3C5f4aC3F678465658A1971892aB39A\",\r\n        image:\r\n            \"https://cdn.sushi.com/image/upload/f_auto,c_limit,w_96,q_auto/tokens/1/0x00000000441378008EA67F4284A57932B1c000a5.jpg\",\r\n    },\r\n    {\r\n        id: \"BEND\",\r\n        name: \"Bend Token\",\r\n        address: \"0x13AbEC309d958c7900e8DEA7d930D794981507Ad\",\r\n        image:\r\n            \"https://cdn.sushi.com/image/upload/f_auto,c_limit,w_96,q_auto/tokens/1/0x01597e397605bf280674bf292623460b4204c375.jpg\",\r\n    },\r\n    {\r\n        id: \"GTON\",\r\n        name: \"Graviton\",\r\n        address: \"0x64D5BaF5ac030e2b7c435aDD967f787ae94D0205\",\r\n        image:\r\n            \"https://cdn.sushi.com/image/upload/f_auto,c_limit,w_96,q_auto/tokens/1/0x01e0e2e61f554ecaaec0cc933e739ad90f24a86d.jpg\",\r\n    },\r\n];\r\n\r\nexport const stakes: Array<IStaking> = [\r\n    {\r\n        id: 1,\r\n        stakeDay: 1,\r\n        currentApy: 460,\r\n        youStaked: 0,\r\n        yourReward: 0,\r\n        totalStakedPool: 0\r\n    },\r\n    {\r\n        id: 2,\r\n        stakeDay: 30,\r\n        currentApy: 600,\r\n        youStaked: 0,\r\n        yourReward: 0,\r\n        totalStakedPool: 0\r\n    },\r\n    {\r\n        id: 3,\r\n        stakeDay: 90,\r\n        currentApy: 750,\r\n        youStaked: 0,\r\n        yourReward: 0,\r\n        totalStakedPool: 0\r\n    }\r\n]\r\n","import tokenABI from \"../abi/tokenABI.json\";\r\nimport stakingABI from \"../abi/stakingABI.json\";\r\nimport {\r\n  useContractWrite,\r\n  useContractRead,\r\n  usePrepareContractWrite,\r\n} from \"wagmi\";\r\nimport Contracts from \"../contracts/56.json\";\r\n\r\nexport function useTokenContractApproveRead(address) {\r\n  const abi = tokenABI;\r\n  return useContractRead({\r\n    address: Contracts.usdt,\r\n    abi: tokenABI,\r\n    functionName: \"allowance\",\r\n    watch: true,\r\n    args: [address, Contracts.swap.address],\r\n  });\r\n}\r\n\r\nexport function useFTTTokenApproveWrite(args) {\r\n  const mono_address = Contracts.usdt;\r\n  const abi = tokenABI;\r\n  return useContractWriteBasic(mono_address, abi, \"approve\", args);\r\n}\r\n\r\nexport function useStaking(args) {\r\n  const staking_address = Contracts.swap.address;\r\n  const abi = stakingABI;\r\n  return useContractWriteBasic(staking_address, abi, \"deposit\", args);\r\n}\r\n\r\nexport function useWithdraw(args) {\r\n  const staking_address = Contracts.swap.address;\r\n  const abi = stakingABI;\r\n  return useContractWriteBasic(staking_address, abi, \"withdraw\", args);\r\n}\r\n\r\nexport function useContractWriteBasic(address, abi, functionName, args) {\r\n  const { config } = usePrepareContractWrite({\r\n    address,\r\n    abi,\r\n    functionName,\r\n    args,\r\n  });\r\n  return useContractWrite(config);\r\n}\r\n","import { ReactNode } from \"react\";\r\nimport { Dialog, DialogBody, DialogHeader } from \"@material-tailwind/react\";\r\nimport { Icon } from \"@iconify/react\";\r\nimport TextIconButton from \"../buttons/TextIconButton\";\r\n\r\ninterface IProps extends IPropsOfComponent {\r\n  title: string | ReactNode;\r\n  visible: boolean;\r\n  setVisible: Function;\r\n}\r\n\r\nexport default function CustomDialog({\r\n  title = \"\",\r\n  visible,\r\n  setVisible,\r\n  children,\r\n}: IProps) {\r\n  const closeDialog = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleVisible = () => {\r\n    setVisible(!visible);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={visible}\r\n      handler={handleVisible}\r\n      className=\"flex flex-col items-center bg-[#fff] w-[500px] py-5\"\r\n    >\r\n      <DialogHeader className=\"justify-between bg-[#fff] rounded-t-md text-[#444]\">\r\n        <h5>{title}</h5>\r\n        <TextIconButton onClick={closeDialog}>\r\n          <Icon icon=\"akar-icons:cross\" className=\"text-xl\" />\r\n        </TextIconButton>\r\n      </DialogHeader>\r\n      <DialogBody className=\"w-full\">{children}</DialogBody>\r\n    </Dialog>\r\n  );\r\n}\r\n","import { ReactNode } from \"react\";\r\nimport { Dialog, DialogBody, DialogHeader, Spinner } from \"@material-tailwind/react\";\r\n\r\ninterface IProps extends IPropsOfComponent {\r\n    visible: boolean;\r\n    setVisible: Function;\r\n}\r\n\r\nexport default function LoadingDialog({\r\n    visible,\r\n    setVisible,\r\n}: IProps) {\r\n    const closeDialog = () => {\r\n        setVisible(false);\r\n    };\r\n\r\n    const handleVisible = () => {\r\n        setVisible(!visible);\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            open={visible}\r\n            handler={handleVisible}\r\n            className=\"flex flex-col items-center bg-[#fff] w-[500px] py-5\"\r\n        >\r\n            <DialogHeader className=\"flex items-center bg-[#fff] rounded-t-md text-[#444]\">\r\n                <h5>Staking</h5>\r\n            </DialogHeader>\r\n            <DialogBody>\r\n                <p className=\"text-[18px]\">\r\n                    Please proceed your transaction through wallet!\r\n                </p>\r\n            </DialogBody>\r\n            <Spinner />\r\n        </Dialog>\r\n    );\r\n}\r\n","import { useState, useEffect, useMemo } from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport { useWeb3Modal } from \"@web3modal/react\";\r\nimport {\r\n  useAccount,\r\n  useConnect,\r\n  useDisconnect,\r\n  useNetwork,\r\n  useSwitchNetwork,\r\n} from \"wagmi\";\r\nimport { providers } from \"ethers\";\r\nimport { formatUnits, parseEther, parseUnits } from \"viem\";\r\nimport { type WalletClient, useWalletClient } from \"wagmi\";\r\nimport Contrats from \"../contracts/56.json\";\r\nimport Container from \"../components/containers/Container\";\r\nimport FilledButton from \"../components/buttons/FilledButton\";\r\nimport { TOKENS } from \"../utils/consts\";\r\nimport stakingABI from \"../abi/stakingABI.json\";\r\nimport { useContractRead } from \"wagmi\";\r\nimport { useWaitForTransaction } from \"wagmi\";\r\nimport logoImg from \"../assets/images/logoking.png\";\r\nimport {\r\n  useFTTTokenApproveWrite,\r\n  useStaking,\r\n  useTokenContractApproveRead,\r\n  useWithdraw,\r\n} from \"../hooks/useContract\";\r\nimport CustomDialog from \"../components/dialogs/CustomDialog\";\r\nimport LoadingDialog from \"../components/dialogs/LoadingDialog\";\r\n\r\nconst chainId = process.env.REACT_APP_CHAIN_ID;\r\nconst CONTRACT_ADDRESS = Contrats.swap.address as `0x${string}`;\r\nexport function walletClientToSigner(walletClient: WalletClient) {\r\n  const { account, chain, transport } = walletClient;\r\n  const network = {\r\n    chainId: chain.id,\r\n    name: chain.name,\r\n    ensAddress: chain.contracts?.ensRegistry?.address,\r\n  };\r\n  const provider = new providers.Web3Provider(transport, network);\r\n  const signer = provider.getSigner(account.address);\r\n  if (chain.id !== parseInt(chainId!)) return;\r\n  return signer;\r\n}\r\n\r\n/** Hook to convert a viem Wallet Client to an ethers.js Signer. */\r\nexport function useEthersSigner({ chainId }: { chainId?: number } = {}) {\r\n  const { data: walletClient } = useWalletClient({ chainId });\r\n  return useMemo(\r\n    () => (walletClient ? walletClientToSigner(walletClient) : undefined),\r\n    [walletClient]\r\n  );\r\n}\r\n\r\nexport default function Blank() {\r\n  const signer = useEthersSigner();\r\n  const { address } = useAccount();\r\n  const [dexVersion, setDexVersion] = useState<string>(\"v2\");\r\n\r\n  const [visible, setVisible] = useState<boolean>(false);\r\n  const [sourceToken, setSource] = useState<IToken>(TOKENS[0]);\r\n  const [targetToken, setTarget] = useState<IToken>(TOKENS[1]);\r\n  const [isApproved, setIsApproved] = useState(false);\r\n  const [loadingVisible, setLoadingVisible] = useState(false);\r\n\r\n  const { open } = useWeb3Modal();\r\n  const { isConnected } = useAccount();\r\n  const { disconnect } = useDisconnect();\r\n\r\n  const { connect } = useConnect();\r\n  const { switchNetwork } = useSwitchNetwork();\r\n  const { chain } = useNetwork();\r\n\r\n  const firstOption: any = useContractRead({\r\n    address: CONTRACT_ADDRESS,\r\n    abi: stakingABI,\r\n    functionName: \"poolInfo\",\r\n    args: [0],\r\n  });\r\n  const secondOption: any = useContractRead({\r\n    address: CONTRACT_ADDRESS,\r\n    abi: stakingABI,\r\n    functionName: \"poolInfo\",\r\n    args: [1],\r\n  });\r\n  const thirdOption: any = useContractRead({\r\n    address: CONTRACT_ADDRESS,\r\n    abi: stakingABI,\r\n    functionName: \"poolInfo\",\r\n    args: [2],\r\n  });\r\n\r\n  const firstInfo: any = useContractRead({\r\n    address: CONTRACT_ADDRESS,\r\n    abi: stakingABI,\r\n    functionName: \"userInfo\",\r\n    args: [0, address],\r\n    enabled: !!address,\r\n    watch: true,\r\n  });\r\n  const secondInfo: any = useContractRead({\r\n    address: CONTRACT_ADDRESS,\r\n    abi: stakingABI,\r\n    functionName: \"userInfo\",\r\n    args: [1, address],\r\n    enabled: !!address,\r\n    watch: true,\r\n  });\r\n  const thirdInfo: any = useContractRead({\r\n    address: CONTRACT_ADDRESS,\r\n    abi: stakingABI,\r\n    functionName: \"userInfo\",\r\n    args: [2, address],\r\n    enabled: !!address,\r\n    watch: true,\r\n  });\r\n\r\n  const firstPending: any = useContractRead({\r\n    address: CONTRACT_ADDRESS,\r\n    abi: stakingABI,\r\n    functionName: \"pendingReward\",\r\n    args: [0, address],\r\n    enabled: !!address,\r\n    watch: true,\r\n  });\r\n\r\n  const secondPending: any = useContractRead({\r\n    address: CONTRACT_ADDRESS,\r\n    abi: stakingABI,\r\n    functionName: \"pendingReward\",\r\n    args: [1, address],\r\n    enabled: !!address,\r\n    watch: true,\r\n  });\r\n  const thirdPending: any = useContractRead({\r\n    address: CONTRACT_ADDRESS,\r\n    abi: stakingABI,\r\n    functionName: \"pendingReward\",\r\n    args: [2, address],\r\n    enabled: !!address,\r\n    watch: true,\r\n  });\r\n\r\n  const [withdrawOption, setWithdrawOption] = useState(0);\r\n  const [withdrawAmount, setWithdrawAmount] = useState(0);\r\n  const [isClaimed, setIsClaimed] = useState(false);\r\n\r\n  const { data: approveData, write: approveWrite } = useFTTTokenApproveWrite([\r\n    CONTRACT_ADDRESS,\r\n    parseEther(\"500000000\"),\r\n  ]);\r\n  const withdrawData = useWithdraw([withdrawOption, withdrawAmount]);\r\n\r\n  const allowanceData: any = useTokenContractApproveRead(address);\r\n\r\n  const [stakingAmount, setStakingAmount] = useState(0);\r\n  const [option, setOption] = useState(0);\r\n\r\n  const stakingData = useStaking([\r\n    option,\r\n    parseUnits(stakingAmount.toString(), 18),\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (allowanceData.data) {\r\n      let allowData: any = formatUnits(allowanceData.data, 18);\r\n      if (parseInt(allowData) > 0) setIsApproved(true);\r\n      else setIsApproved(false);\r\n    }\r\n  }, [allowanceData]);\r\n\r\n  const onApprove = () => {\r\n    approveWrite && approveWrite();\r\n    //\r\n  };\r\n\r\n  const onStake = () => {\r\n    setVisible(true);\r\n    //\r\n  };\r\n\r\n  const stakeWait = useWaitForTransaction({\r\n    hash: stakingData.data?.hash,\r\n    onSuccess(data) {\r\n      setLoadingVisible(false);\r\n      // window.location.reload();\r\n    },\r\n    onError(data) {\r\n      setLoadingVisible(false);\r\n      // window.location.reload();\r\n    },\r\n  });\r\n\r\n  const handleClaim = (option: any, amount: any) => {\r\n    console.log(\"🚀 ~ file: Home.tsx:314 ~ handleClaim ~ amount:\", amount);\r\n    setWithdrawOption(option);\r\n    switch (option) {\r\n      case 0:\r\n        setWithdrawAmount(firstInfo.data?.at(0));\r\n\r\n        break;\r\n      case 1:\r\n        setWithdrawAmount(secondInfo.data?.at(0));\r\n\r\n        break;\r\n      case 2:\r\n        setWithdrawAmount(thirdInfo.data?.at(0));\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n    // setWithdrawAmount(amount);\r\n    setIsClaimed(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isClaimed) {\r\n      withdrawData.write && withdrawData.write();\r\n    }\r\n    setIsClaimed(false);\r\n  }, [withdrawOption, withdrawAmount, isClaimed]);\r\n\r\n  const withdrawWait = useWaitForTransaction({\r\n    hash: withdrawData.data?.hash,\r\n    onSuccess(data) {\r\n      setLoadingVisible(false);\r\n    },\r\n    onError(data) {\r\n      setLoadingVisible(false);\r\n    },\r\n  });\r\n\r\n  const currentTimestamp = () => {\r\n    const currentDate = new Date();\r\n    const timestamp = currentDate.getTime();\r\n    Math.round(timestamp / 1000);\r\n    return Math.round(timestamp / 1000);\r\n  };\r\n\r\n  console.log(\r\n    \"canclaim-------->\",\r\n    Number(firstInfo.data?.at(2)) != 0\r\n      ? Number(firstInfo.data?.at(2)) < currentTimestamp() &&\r\n          Number(firstInfo.data?.at(0)) > 0\r\n      : false\r\n  );\r\n  const stakingOptions = [\r\n    {\r\n      id: 1,\r\n      stakeDay: firstOption && firstOption.data?.at(4).toString(),\r\n      currentApy: firstOption && firstOption.data?.at(3).toString(),\r\n      youStaked: Math.round(\r\n        parseFloat(\r\n          formatUnits(firstInfo.data ? firstInfo.data?.at(0) : BigInt(0), 18) ||\r\n            \"0\"\r\n        )\r\n      ),\r\n      totalStakedPool: Math.round(\r\n        parseFloat(\r\n          formatUnits(\r\n            firstOption.data ? firstOption.data?.at(2) : BigInt(0),\r\n            18\r\n          ) || \"0\"\r\n        )\r\n      ),\r\n      canClaim:\r\n        Number(firstInfo.data?.at(2)) != 0\r\n          ? Number(firstInfo.data?.at(2)) < currentTimestamp() &&\r\n            Number(firstInfo.data?.at(0)) > 0\r\n          : false,\r\n      pendingAmount: parseFloat(\r\n        formatUnits(firstPending.data ? firstPending.data : BigInt(0), 18) ||\r\n          \"0\"\r\n      ).toFixed(3),\r\n    },\r\n    {\r\n      id: 2,\r\n      stakeDay: secondOption && secondOption.data?.at(4).toString(),\r\n      currentApy: secondOption && secondOption.data?.at(3).toString(),\r\n      youStaked: Math.round(\r\n        parseFloat(\r\n          formatUnits(\r\n            secondInfo.data ? secondInfo.data?.at(0) : BigInt(0),\r\n            18\r\n          ) || \"0\"\r\n        )\r\n      ),\r\n      // yourReward: secondPending ? Math.round(parseFloat(formatUnits(secondPending?.data, 18)) * 100) / 100 : 0,\r\n      totalStakedPool: parseFloat(\r\n        formatUnits(\r\n          secondOption.data ? secondOption.data?.at(2) : BigInt(0),\r\n          18\r\n        ) || \"0\"\r\n      ),\r\n      canClaim:\r\n        Number(secondInfo.data?.at(2)) != 0\r\n          ? Number(secondInfo.data?.at(2)) < currentTimestamp() &&\r\n            Number(secondInfo.data?.at(0)) > 0\r\n          : false,\r\n      pendingAmount: parseFloat(\r\n        formatUnits(secondPending.data ? secondPending.data : BigInt(0), 18) ||\r\n          \"0\"\r\n      ).toFixed(3),\r\n    },\r\n    {\r\n      id: 3,\r\n      stakeDay: thirdOption && thirdOption.data?.at(4).toString(),\r\n      currentApy: thirdOption && thirdOption.data?.at(3).toString(),\r\n      youStaked: Math.round(\r\n        parseFloat(\r\n          formatUnits(thirdInfo.data ? thirdInfo.data?.at(0) : BigInt(0), 18) ||\r\n            \"0\"\r\n        )\r\n      ),\r\n      // yourReward: thirdPending ? Math.round(parseFloat(formatUnits(thirdPending?.data, 18)) * 100) / 100 : 0,\r\n      totalStakedPool: Math.round(\r\n        parseFloat(\r\n          formatUnits(\r\n            thirdOption.data ? thirdOption.data?.at(2) : BigInt(0),\r\n            18\r\n          ) || \"0\"\r\n        )\r\n      ),\r\n      canClaim:\r\n        Number(thirdInfo.data?.at(2)) != 0\r\n          ? Number(thirdInfo.data?.at(2)) < currentTimestamp() &&\r\n            Number(thirdInfo.data?.at(0)) > 0\r\n          : false,\r\n      pendingAmount: parseFloat(\r\n        formatUnits(thirdPending.data ? thirdPending.data : BigInt(0), 18) ||\r\n          \"0\"\r\n      ).toFixed(3),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <section className=\"h-full flex flex-col justify-center items-center pt-[50px] gap-5 sm:pt-0 sm:gap-5\">\r\n      <p className=\"text-[20px] sm:text-[30px] px-6 flex justify-center items-center\">\r\n        Disclaimer: you cannot withdraw tokens until lock time ends\r\n      </p>\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 h-fit pt-6 pb-4 gap-10\">\r\n        {stakingOptions.map((stake, index) => (\r\n          <div className=\"relative h-fit\" key={index}>\r\n            <div className=\"container max-w-lg\">\r\n              <div className=\"py-6 px-6 bg-[#081117] flex flex-col gap-[10px] w-[350px] rounded-lg border text-[#f8f8f9] shadow-sm\">\r\n                <div className=\" flex items-center justify-between\">\r\n                  <img\r\n                    src={logoImg}\r\n                    alt={`${stake.id} logo`}\r\n                    className=\" w-[90px] \"\r\n                    loading=\"lazy\"\r\n                  />\r\n\r\n                  <div className=\"flex gap-4 flex-col\">\r\n                    <span className=\"opacity-100 font-bold\">KING</span>\r\n                    <span className=\"opacity-60\">Will Be Locked</span>\r\n                    <div className=\"text-base  px-4 py-2 font-semibold bg-[#182b48] rounded-md normal-case flex justify-end\">\r\n                      {stake.stakeDay} days\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex flex-row justify-between\"></div>\r\n\r\n                <div className=\"flex flex-row justify-between  opacity-60 text-[16px]\">\r\n                  <span>Current APY:</span>\r\n                  <span>{stake.currentApy} %</span>\r\n                </div>\r\n\r\n                <div className=\"flex flex-row justify-between  opacity-60 text-[16px]\">\r\n                  <span>Earn:</span>\r\n                  <span>KING</span>\r\n                </div>\r\n\r\n                <div className=\"flex flex-row justify-between  opacity-60 text-[16px]\">\r\n                  <span>KING Staked</span>\r\n                  <span className=\"text-[#ff4500]  font-[800]\">\r\n                    In Progress\r\n                  </span>\r\n                </div>\r\n\r\n                <div className=\"my-8\">\r\n                  {stake.canClaim && parseFloat(stake.pendingAmount) > 0 ? (\r\n                    <FilledButton\r\n                      className=\"w-full text-base py-3 font-semibold bg-[#182b48]\"\r\n                      onClick={() => handleClaim(index, stake.pendingAmount)}\r\n                    >\r\n                      Claim\r\n                    </FilledButton>\r\n                  ) : !isConnected ? (\r\n                    <FilledButton\r\n                      className=\"w-full text-base py-3 font-semibold bg-[#182b48]\"\r\n                      onClick={open}\r\n                    >\r\n                      Connect Wallet\r\n                    </FilledButton>\r\n                  ) : isApproved ? (\r\n                    <FilledButton\r\n                      className=\"w-full text-base py-3 font-semibold bg-[#182b48]\"\r\n                      onClick={() => {\r\n                        onStake();\r\n                        setOption(index);\r\n                      }}\r\n                    >\r\n                      Stake Now\r\n                    </FilledButton>\r\n                  ) : (\r\n                    <FilledButton\r\n                      className=\"w-full text-base py-3 font-semibold bg-[#182b48]\"\r\n                      onClick={onApprove}\r\n                    >\r\n                      Enable Staking\r\n                    </FilledButton>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"flex flex-row justify-between opacity-60 text-[16px]\">\r\n                  <span>You Staked:</span>\r\n                  <span>{stake.youStaked} KING</span>\r\n                </div>\r\n\r\n                <div className=\"flex flex-row justify-between opacity-60 text-[16px]\">\r\n                  <span>You Reward:</span>\r\n                  <span>{stake.pendingAmount} KING</span>\r\n                </div>\r\n\r\n                <div className=\"flex flex-row justify-between opacity-60 text-[16px]\">\r\n                  <span>Total Staked In Pool:</span>\r\n                  <span className=\"font-[700] \">\r\n                    {stake.totalStakedPool} KING\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <CustomDialog\r\n        title=\"Enter amount to Stake\"\r\n        visible={visible}\r\n        setVisible={setVisible}\r\n      >\r\n        <input\r\n          className=\"w-full h-[50px] border-[1px] rounded-[2px] px-[10px]\"\r\n          onChange={(e: any) => {\r\n            setStakingAmount(e.target.value);\r\n          }}\r\n        />\r\n        <div className=\"flex flex-row gap-5\">\r\n          <FilledButton\r\n            onClick={() => {\r\n              setVisible(false);\r\n              setLoadingVisible(true);\r\n              stakingData.write && stakingData.write();\r\n            }}\r\n            className=\"w-full text-base  font-semibold bg-[#182b48] mt-[5px]\"\r\n          >\r\n            OK\r\n          </FilledButton>\r\n          <FilledButton\r\n            onClick={() => {\r\n              setVisible(false);\r\n            }}\r\n            className=\"w-full text-base  font-semibold bg-[#ddd] text-[000] mt-[5px]\"\r\n          >\r\n            Cancel\r\n          </FilledButton>\r\n        </div>\r\n      </CustomDialog>\r\n      <LoadingDialog\r\n        visible={stakingData.isLoading}\r\n        setVisible={setLoadingVisible}\r\n      ></LoadingDialog>\r\n    </section>\r\n  );\r\n}\r\n"],"names":["FilledButton","_ref","className","children","others","_jsx","Button","variant","concat","TextIconButton","IconButton","TOKENS","id","name","image","address","useContractWriteBasic","abi","functionName","args","config","usePrepareContractWrite","useContractWrite","CustomDialog","title","visible","setVisible","_jsxs","Dialog","open","handler","handleVisible","DialogHeader","onClick","closeDialog","Icon","icon","DialogBody","LoadingDialog","Spinner","chainId","process","CONTRACT_ADDRESS","Contrats","walletClientToSigner","walletClient","_chain$contracts","_chain$contracts$ensR","account","chain","transport","network","ensAddress","contracts","ensRegistry","signer","providers","getSigner","parseInt","useEthersSigner","arguments","length","undefined","data","useWalletClient","useMemo","Blank","_stakingData$data","_withdrawData$data","_firstInfo$data2","_firstInfo$data3","_firstInfo$data4","_firstOption$data","_firstOption$data2","_firstInfo$data5","_firstOption$data3","_firstInfo$data6","_firstInfo$data7","_firstInfo$data8","_secondOption$data","_secondOption$data2","_secondInfo$data2","_secondOption$data3","_secondInfo$data3","_secondInfo$data4","_secondInfo$data5","_thirdOption$data","_thirdOption$data2","_thirdInfo$data2","_thirdOption$data3","_thirdInfo$data3","_thirdInfo$data4","_thirdInfo$data5","useAccount","dexVersion","setDexVersion","useState","sourceToken","setSource","targetToken","setTarget","isApproved","setIsApproved","loadingVisible","setLoadingVisible","useWeb3Modal","isConnected","disconnect","useDisconnect","connect","useConnect","switchNetwork","useSwitchNetwork","useNetwork","firstOption","useContractRead","stakingABI","secondOption","thirdOption","firstInfo","enabled","watch","secondInfo","thirdInfo","firstPending","secondPending","thirdPending","withdrawOption","setWithdrawOption","withdrawAmount","setWithdrawAmount","isClaimed","setIsClaimed","approveData","write","approveWrite","parseEther","Contracts","tokenABI","withdrawData","useWithdraw","allowanceData","useTokenContractApproveRead","stakingAmount","setStakingAmount","option","setOption","stakingData","useStaking","parseUnits","toString","useEffect","allowData","formatUnits","onApprove","useWaitForTransaction","hash","onSuccess","onError","currentTimestamp","timestamp","Date","getTime","Math","round","console","log","Number","at","stakingOptions","stakeDay","currentApy","youStaked","parseFloat","BigInt","totalStakedPool","canClaim","pendingAmount","toFixed","map","stake","index","src","logoImg","alt","loading","handleClaim","amount","_firstInfo$data","_secondInfo$data","_thirdInfo$data","onChange","e","target","value","isLoading"],"sourceRoot":""}